# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := net_base
### Rules for action "ssl_false_start_blacklist":
quiet_cmd_net_base_ssl_false_start_blacklist = ACTION Generating SSL False Start blacklist $@
cmd_net_base_ssl_false_start_blacklist = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd net; mkdir -p $(obj)/gen/net/base; "$(builddir)/ssl_false_start_blacklist_process" base/ssl_false_start_blacklist.txt "$(obj)/gen/net/base/ssl_false_start_blacklist_data.cc"

$(obj)/gen/net/base/ssl_false_start_blacklist_data.cc: obj := $(abs_obj)

$(obj)/gen/net/base/ssl_false_start_blacklist_data.cc: builddir := $(abs_builddir)

$(obj)/gen/net/base/ssl_false_start_blacklist_data.cc: TOOLSET := $(TOOLSET)
$(obj)/gen/net/base/ssl_false_start_blacklist_data.cc: $(builddir)/ssl_false_start_blacklist_process net/base/ssl_false_start_blacklist.txt FORCE_DO_CMD
	$(call do_cmd,net_base_ssl_false_start_blacklist)

all_deps += $(obj)/gen/net/base/ssl_false_start_blacklist_data.cc
action_net_base_ssl_false_start_blacklist_outputs := $(obj)/gen/net/base/ssl_false_start_blacklist_data.cc


DEFS_Debug := '-DNO_HEAPCHECKER' \
	'-DCHROMIUM_BUILD' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_GPU=1' \
	'-DU_STATIC_IMPLEMENTATION' \
	'-DUSE_SYSTEM_ZLIB' \
	'-D__STDC_FORMAT_MACROS' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-D_DEBUG'

# Flags passed to both C and C++ files.
CFLAGS_Debug := -Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-fvisibility=hidden \
	-pipe \
	-fno-strict-aliasing \
	-pthread \
	-D_REENTRANT \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/freetype2 \
	-I/usr/include/directfb \
	-I/usr/include/libpng12 \
	-DORBIT2=1 \
	-pthread \
	-I/usr/include/gconf/2 \
	-I/usr/include/orbit-2.0 \
	-I/usr/include/dbus-1.0 \
	-I/usr/lib/dbus-1.0/include \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include \
	-pthread \
	-D_REENTRANT \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/gtk-2.0/include \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/cairo \
	-I/usr/include/pango-1.0 \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/freetype2 \
	-I/usr/include/directfb \
	-I/usr/include/libpng12 \
	-I../net/third_party/nss/ssl \
	-Inet/third_party/nss/ssl \
	-IWebKit/chromium/net/third_party/nss/ssl \
	-I/usr/include/nss \
	-I/usr/include/nspr \
	-O0 \
	-g

# Flags passed to only C (and not C++) files.
CFLAGS_C_Debug := 

# Flags passed to only C++ (and not C) files.
CFLAGS_CC_Debug := -fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden

INCS_Debug := -Ithird_party/icu/public/common \
	-Ithird_party/icu/public/i18n \
	-I. \
	-Isdch/open-vcdiff/src \
	-I$(obj)/gen/net

DEFS_Release := '-DNO_HEAPCHECKER' \
	'-DCHROMIUM_BUILD' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_GPU=1' \
	'-DU_STATIC_IMPLEMENTATION' \
	'-DUSE_SYSTEM_ZLIB' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to both C and C++ files.
CFLAGS_Release := -Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-fvisibility=hidden \
	-pipe \
	-fno-strict-aliasing \
	-pthread \
	-D_REENTRANT \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/freetype2 \
	-I/usr/include/directfb \
	-I/usr/include/libpng12 \
	-DORBIT2=1 \
	-pthread \
	-I/usr/include/gconf/2 \
	-I/usr/include/orbit-2.0 \
	-I/usr/include/dbus-1.0 \
	-I/usr/lib/dbus-1.0/include \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include \
	-pthread \
	-D_REENTRANT \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/gtk-2.0/include \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/cairo \
	-I/usr/include/pango-1.0 \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/glib-2.0/include \
	-I/usr/include/pixman-1 \
	-I/usr/include/freetype2 \
	-I/usr/include/directfb \
	-I/usr/include/libpng12 \
	-I../net/third_party/nss/ssl \
	-Inet/third_party/nss/ssl \
	-IWebKit/chromium/net/third_party/nss/ssl \
	-I/usr/include/nss \
	-I/usr/include/nspr \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C (and not C++) files.
CFLAGS_C_Release := 

# Flags passed to only C++ (and not C) files.
CFLAGS_CC_Release := -fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden

INCS_Release := -Ithird_party/icu/public/common \
	-Ithird_party/icu/public/i18n \
	-I. \
	-Isdch/open-vcdiff/src \
	-I$(obj)/gen/net

OBJS := $(obj).target/$(TARGET)/net/base/address_list.o \
	$(obj).target/$(TARGET)/net/base/address_list_net_log_param.o \
	$(obj).target/$(TARGET)/net/base/auth.o \
	$(obj).target/$(TARGET)/net/base/capturing_net_log.o \
	$(obj).target/$(TARGET)/net/base/cert_database.o \
	$(obj).target/$(TARGET)/net/base/cert_database_nss.o \
	$(obj).target/$(TARGET)/net/base/cert_status_flags.o \
	$(obj).target/$(TARGET)/net/base/cert_verifier.o \
	$(obj).target/$(TARGET)/net/base/connection_type_histograms.o \
	$(obj).target/$(TARGET)/net/base/cookie_monster.o \
	$(obj).target/$(TARGET)/net/base/data_url.o \
	$(obj).target/$(TARGET)/net/base/directory_lister.o \
	$(obj).target/$(TARGET)/net/base/dns_reload_timer.o \
	$(obj).target/$(TARGET)/net/base/dnssec_chain_verifier.o \
	$(obj).target/$(TARGET)/net/base/dnssec_keyset.o \
	$(obj).target/$(TARGET)/net/base/dns_util.o \
	$(obj).target/$(TARGET)/net/base/dnsrr_resolver.o \
	$(obj).target/$(TARGET)/net/base/escape.o \
	$(obj).target/$(TARGET)/net/base/ev_root_ca_metadata.o \
	$(obj).target/$(TARGET)/net/base/file_stream_posix.o \
	$(obj).target/$(TARGET)/net/base/filter.o \
	$(obj).target/$(TARGET)/net/base/forwarding_net_log.o \
	$(obj).target/$(TARGET)/net/base/gzip_filter.o \
	$(obj).target/$(TARGET)/net/base/gzip_header.o \
	$(obj).target/$(TARGET)/net/base/host_cache.o \
	$(obj).target/$(TARGET)/net/base/host_mapping_rules.o \
	$(obj).target/$(TARGET)/net/base/host_port_pair.o \
	$(obj).target/$(TARGET)/net/base/host_resolver.o \
	$(obj).target/$(TARGET)/net/base/host_resolver_impl.o \
	$(obj).target/$(TARGET)/net/base/host_resolver_proc.o \
	$(obj).target/$(TARGET)/net/base/io_buffer.o \
	$(obj).target/$(TARGET)/net/base/keygen_handler_nss.o \
	$(obj).target/$(TARGET)/net/base/listen_socket.o \
	$(obj).target/$(TARGET)/net/base/mapped_host_resolver.o \
	$(obj).target/$(TARGET)/net/base/mime_sniffer.o \
	$(obj).target/$(TARGET)/net/base/mime_util.o \
	$(obj).target/$(TARGET)/net/base/mock_host_resolver.o \
	$(obj).target/$(TARGET)/net/base/net_errors.o \
	$(obj).target/$(TARGET)/net/base/net_log.o \
	$(obj).target/$(TARGET)/net/base/net_module.o \
	$(obj).target/$(TARGET)/net/base/net_util.o \
	$(obj).target/$(TARGET)/net/base/net_util_posix.o \
	$(obj).target/$(TARGET)/net/base/network_change_notifier.o \
	$(obj).target/$(TARGET)/net/base/network_change_notifier_linux.o \
	$(obj).target/$(TARGET)/net/base/network_change_notifier_netlink_linux.o \
	$(obj).target/$(TARGET)/net/base/nss_memio.o \
	$(obj).target/$(TARGET)/net/base/pem_tokenizer.o \
	$(obj).target/$(TARGET)/net/base/platform_mime_util_linux.o \
	$(obj).target/$(TARGET)/net/base/registry_controlled_domain.o \
	$(obj).target/$(TARGET)/net/base/sdch_filter.o \
	$(obj).target/$(TARGET)/net/base/sdch_manager.o \
	$(obj).target/$(TARGET)/net/base/ssl_cert_request_info.o \
	$(obj).target/$(TARGET)/net/base/ssl_cipher_suite_names.o \
	$(obj).target/$(TARGET)/net/base/ssl_client_auth_cache.o \
	$(obj).target/$(TARGET)/net/base/ssl_config_service.o \
	$(obj).target/$(TARGET)/net/base/ssl_config_service_defaults.o \
	$(obj).target/$(TARGET)/net/base/ssl_false_start_blacklist.o \
	$(obj).target/$(TARGET)/net/base/ssl_info.o \
	$(obj).target/$(TARGET)/net/base/static_cookie_policy.o \
	$(obj).target/$(TARGET)/net/base/transport_security_state.o \
	$(obj).target/$(TARGET)/net/base/upload_data.o \
	$(obj).target/$(TARGET)/net/base/upload_data_stream.o \
	$(obj).target/$(TARGET)/net/base/x509_certificate.o \
	$(obj).target/$(TARGET)/net/base/x509_certificate_nss.o \
	$(obj).target/$(TARGET)/net/base/x509_cert_types.o \
	$(obj).target/$(TARGET)/net/third_party/mozilla_security_manager/nsKeygenHandler.o \
	$(obj).target/$(TARGET)/net/third_party/mozilla_security_manager/nsNSSCertificateDB.o \
	$(obj).target/$(TARGET)/net/third_party/mozilla_security_manager/nsNSSCertTrust.o \
	$(obj).target/$(TARGET)/net/third_party/mozilla_security_manager/nsPKCS12Blob.o \
	$(obj).target/$(TARGET)/gen/net/base/ssl_false_start_blacklist_data.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/net/net_resources.stamp ssl_false_start_blacklist_process

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action_net_base_ssl_false_start_blacklist_outputs)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(obj).target/net/libnet_base.a: | $(action_net_base_ssl_false_start_blacklist_outputs)

# Preserve order dependency of special output on deps.
$(action_net_base_ssl_false_start_blacklist_outputs): | $(obj).target/net/net_resources.stamp ssl_false_start_blacklist_process

LDFLAGS_Debug := -pthread \
	-Wl,-z,noexecstack

LDFLAGS_Release := -pthread \
	-Wl,-z,noexecstack \
	-Wl,-O1 \
	-Wl,--as-needed \
	-Wl,--gc-sections

LIBS := 

$(obj).target/net/libnet_base.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/net/libnet_base.a: LIBS := $(LIBS)
$(obj).target/net/libnet_base.a: TOOLSET := $(TOOLSET)
$(obj).target/net/libnet_base.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/net/libnet_base.a
# Add target alias
.PHONY: net_base
net_base: $(obj).target/net/libnet_base.a

# Add target alias to "all" target.
.PHONY: all
all: net_base

